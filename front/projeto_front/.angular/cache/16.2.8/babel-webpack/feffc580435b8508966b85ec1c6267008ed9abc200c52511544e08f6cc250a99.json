{"ast":null,"code":"import { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"produtos\"];\nexport class HomeComponent {\n  constructor() {\n    this.produtos = [];\n  }\n  createChart() {\n    const canvas = this.myChart.nativeElement;\n    const ctx = canvas.getContext('2d');\n    // Mapeie seus produtos para os rótulos (labels) e valores do gráfico\n    const labels = this.produtos.map(produto => produto.nome);\n    const data = this.produtos.map(produto => produto.preco);\n    const chart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Preços dos Produtos',\n          data: data,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  OnInit() {\n    this.createChart();\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    viewQuery: function HomeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myChart = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[2, \"display\", \"block\"], [\"mdbChart\", \"\", 3, \"chartType\", \"datasets\", \"labels\", \"colors\", \"options\", \"legend\", \"chartHover\", \"chartClick\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"canvas\", 1);\n        i0.ɵɵlistener(\"chartHover\", function HomeComponent_Template_canvas_chartHover_1_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function HomeComponent_Template_canvas_chartClick_1_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"chartType\", ctx.chartType)(\"datasets\", ctx.chartDatasets)(\"labels\", ctx.chartLabels)(\"colors\", ctx.chartColors)(\"options\", ctx.chartOptions)(\"legend\", true);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","HomeComponent","constructor","produtos","createChart","canvas","myChart","nativeElement","ctx","getContext","labels","map","produto","nome","data","preco","chart","type","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","OnInit","_","_2","selectors","viewQuery","HomeComponent_Query","rf","i0","ɵɵelementStart","ɵɵlistener","HomeComponent_Template_canvas_chartHover_1_listener","$event","chartHovered","HomeComponent_Template_canvas_chartClick_1_listener","chartClicked","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","chartType","chartDatasets","chartLabels","chartColors","chartOptions"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { Observable } from 'rxjs';\nimport { IProdutos } from 'src/app/interfaces/produtos';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  @ViewChild('produtos') myChart!: ElementRef;\n  produtos: IProdutos[] = [];\n\n  createChart() {\n    const canvas: HTMLCanvasElement = this.myChart.nativeElement;\n    const ctx = canvas.getContext('2d');\n\n    // Mapeie seus produtos para os rótulos (labels) e valores do gráfico\n    const labels =this.produtos.map(produto => produto.nome);\n    const data = this.produtos.map(produto => produto.preco);\n\n    const chart = new Chart(ctx!, {\n      type: 'bar', // Ou outro tipo de gráfico Chart.js\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Preços dos Produtos',\n          data: data,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)', // Cor de fundo das barras\n          borderColor: 'rgba(75, 192, 192, 1)', // Cor da borda das barras\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\nOnInit(){\n  this.createChart();    \n\n}\n \n\n}\n\n\n","<div style=\"display: block\">\n    <canvas mdbChart\n      [chartType]=\"chartType\"\n      [datasets]=\"chartDatasets\"\n      [labels]=\"chartLabels\"\n      [colors]=\"chartColors\"\n      [options]=\"chartOptions\"\n      [legend]=\"true\"\n      (chartHover)=\"chartHovered($event)\"\n      (chartClick)=\"chartClicked($event)\">\n    </canvas>\n  </div>"],"mappings":"AACA,SAASA,KAAK,QAAQ,UAAU;;;AAUhC,OAAM,MAAOC,aAAa;EAL1BC,YAAA;IAOE,KAAAC,QAAQ,GAAgB,EAAE;;EAE1BC,WAAWA,CAAA;IACT,MAAMC,MAAM,GAAsB,IAAI,CAACC,OAAO,CAACC,aAAa;IAC5D,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IAEnC;IACA,MAAMC,MAAM,GAAE,IAAI,CAACP,QAAQ,CAACQ,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC;IACxD,MAAMC,IAAI,GAAG,IAAI,CAACX,QAAQ,CAACQ,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACG,KAAK,CAAC;IAExD,MAAMC,KAAK,GAAG,IAAIhB,KAAK,CAACQ,GAAI,EAAE;MAC5BS,IAAI,EAAE,KAAK;MACXH,IAAI,EAAE;QACJJ,MAAM,EAAEA,MAAM;QACdQ,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,qBAAqB;UAC5BL,IAAI,EAAEA,IAAI;UACVM,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;SACd;OACF;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;;;;KAIpB,CAAC;EACJ;EACFC,MAAMA,CAAA;IACJ,IAAI,CAACvB,WAAW,EAAE;EAEpB;EAAC,QAAAwB,CAAA,G;qBApCY3B,aAAa;EAAA;EAAA,QAAA4B,EAAA,G;UAAb5B,aAAa;IAAA6B,SAAA;IAAAC,SAAA,WAAAC,oBAAAC,EAAA,EAAAzB,GAAA;MAAA,IAAAyB,EAAA;;;;;;;;;;;;;QCX1BC,EAAA,CAAAC,cAAA,aAA4B;QAQtBD,EAAA,CAAAE,UAAA,wBAAAC,oDAAAC,MAAA;UAAA,OAAc9B,GAAA,CAAA+B,YAAA,CAAAD,MAAA,CAAoB;QAAA,EAAC,wBAAAE,oDAAAF,MAAA;UAAA,OACrB9B,GAAA,CAAAiC,YAAA,CAAAH,MAAA,CAAoB;QAAA,EADC;QAErCJ,EAAA,CAAAQ,YAAA,EAAS;;;QARPR,EAAA,CAAAS,SAAA,GAAuB;QAAvBT,EAAA,CAAAU,UAAA,cAAApC,GAAA,CAAAqC,SAAA,CAAuB,aAAArC,GAAA,CAAAsC,aAAA,YAAAtC,GAAA,CAAAuC,WAAA,YAAAvC,GAAA,CAAAwC,WAAA,aAAAxC,GAAA,CAAAyC,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}