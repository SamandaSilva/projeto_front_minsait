{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/produtos.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class EdicaoProdutoComponent {\n  constructor(produtoService, route) {\n    this.produtoService = produtoService;\n    this.route = route;\n    this.produto = [];\n    this.produtoForm = new FormGroup({\n      nome: new FormControl('', Validators.required),\n      codigoBarras: new FormControl('', Validators.required),\n      preco: new FormControl(0)\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = +params['id'];\n      if (!isNaN(id)) {\n        this.produtoService.buscarProdutoId(id).subscribe(produto => {\n          this.produto = produto;\n        });\n      }\n    });\n    this.produtoService.atualizarProdutos(produto.id).subscribe;\n  }\n  static #_ = this.ɵfac = function EdicaoProdutoComponent_Factory(t) {\n    return new (t || EdicaoProdutoComponent)(i0.ɵɵdirectiveInject(i1.ProdutosService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EdicaoProdutoComponent,\n    selectors: [[\"app-edicao-produto\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"codigoBarras\", \"formControlName\", \"codigoBarras\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"preco\", \"formControlName\", \"preco\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function EdicaoProdutoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Editar Produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Nome do produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"C\\u00F3digo de Barras\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 4);\n        i0.ɵɵtext(13, \"Pre\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵtext(16, \"Salvar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.produtoForm);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","EdicaoProdutoComponent","constructor","produtoService","route","produto","produtoForm","nome","required","codigoBarras","preco","ngOnInit","params","subscribe","id","isNaN","buscarProdutoId","atualizarProdutos","_","i0","ɵɵdirectiveInject","i1","ProdutosService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","EdicaoProdutoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\edicao-produto\\edicao-produto.component.ts","C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\edicao-produto\\edicao-produto.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpParams } from '@angular/common/http';\nimport { ProdutoComponent } from '../produto/produto.component';\nimport { Subscription } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-edicao-produto',\n  templateUrl: './edicao-produto.component.html',\n  styleUrls: ['./edicao-produto.component.css']\n})\nexport class EdicaoProdutoComponent implements OnInit{\n\n  produto: IProdutos[] = []; \n\n  constructor(\n    private produtoService: ProdutosService,\n    private route: ActivatedRoute\n    ){ }\n\n  produtoForm = new FormGroup({\n    nome: new FormControl('', Validators.required),\n    codigoBarras: new FormControl('', Validators.required),\n    preco: new FormControl(0),\n  });\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      const id = +params['id'];\n      if (!isNaN(id)) {\n        this.produtoService.buscarProdutoId(id).subscribe((produto) => {\n          this.produto = produto;\n        });\n      }\n    });\n\n    this.produtoService.atualizarProdutos(produto.id).subscribe\n  }\n  \n  \n}\n  \n  \n  \n  \n\n\n\n\n  /*atualizarProduto(id:number){\n    const produto: IProdutos = this.produtoForm.value as IProdutos;\n\n    this.produto.atualizarProdutos(produto).subscribe(() =>\n    this.produtoForm.reset());\n  }*/\n\n  \n\n\n","<h1>Editar Produto</h1>\n\n<form [formGroup]=\"produtoForm\" >\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\" >Nome do produto</label>\n      <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Código de Barras</label>\n      <input type=\"text\" class=\"form-control\" id=\"codigoBarras\" formControlName=\"codigoBarras\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\" >Preço</label>\n        <input type=\"number\" class=\"form-control\" id=\"preco\" formControlName=\"preco\">\n      </div>\n    <button class=\"btn btn-primary\" type=\"submit\" >Salvar</button>\n  </form>\n"],"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAcnE,OAAM,MAAOC,sBAAsB;EAIjCC,YACUC,cAA+B,EAC/BC,KAAqB;IADrB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,KAAK,GAALA,KAAK;IAJf,KAAAC,OAAO,GAAgB,EAAE;IAOzB,KAAAC,WAAW,GAAG,IAAIR,SAAS,CAAC;MAC1BS,IAAI,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACQ,QAAQ,CAAC;MAC9CC,YAAY,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACQ,QAAQ,CAAC;MACtDE,KAAK,EAAE,IAAIX,WAAW,CAAC,CAAC;KACzB,CAAC;EANG;EAQLY,QAAQA,CAAA;IACN,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,MAAME,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;MACxB,IAAI,CAACG,KAAK,CAACD,EAAE,CAAC,EAAE;QACd,IAAI,CAACX,cAAc,CAACa,eAAe,CAACF,EAAE,CAAC,CAACD,SAAS,CAAER,OAAO,IAAI;UAC5D,IAAI,CAACA,OAAO,GAAGA,OAAO;QACxB,CAAC,CAAC;;IAEN,CAAC,CAAC;IAEF,IAAI,CAACF,cAAc,CAACc,iBAAiB,CAACZ,OAAO,CAACS,EAAE,CAAC,CAACD,SAAS;EAC7D;EAAC,QAAAK,CAAA,G;qBA1BUjB,sBAAsB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBxB,sBAAsB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChBnCb,EAAA,CAAAe,cAAA,SAAI;QAAAf,EAAA,CAAAgB,MAAA,qBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEvBjB,EAAA,CAAAe,cAAA,cAAiC;QAEyBf,EAAA,CAAAgB,MAAA,sBAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC3EjB,EAAA,CAAAkB,SAAA,eAAyE;QAC3ElB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAe,cAAA,aAAkB;QACsCf,EAAA,CAAAgB,MAAA,4BAAgB;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC9EjB,EAAA,CAAAkB,SAAA,gBAAyF;QAC3FlB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAe,cAAA,cAAkB;QACyCf,EAAA,CAAAgB,MAAA,kBAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACpEjB,EAAA,CAAAkB,SAAA,gBAA6E;QAC/ElB,EAAA,CAAAiB,YAAA,EAAM;QACRjB,EAAA,CAAAe,cAAA,iBAA+C;QAAAf,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAb5DjB,EAAA,CAAAmB,SAAA,GAAyB;QAAzBnB,EAAA,CAAAoB,UAAA,cAAAN,GAAA,CAAA3B,WAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}