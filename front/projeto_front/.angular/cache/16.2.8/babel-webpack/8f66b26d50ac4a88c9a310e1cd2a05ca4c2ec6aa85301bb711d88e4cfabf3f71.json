{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let CadastroProdutoComponent = class CadastroProdutoComponent {\n  constructor(produtos, formBuilder) {\n    this.produtos = produtos;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.ConfigurarForm();\n  }\n  enviar() {\n    const produto = this.produtoForm.value;\n    this.produtos.cadastrarProdutos(produto).subscribe(result => {\n      Swal.fire({\n        icon: 'success',\n        title: 'Produto cadastrado com sucesso!',\n        showConfirmButton: false,\n        timer: 1500\n      });\n      this.produtoForm.reset();\n    }, error => {\n      const {\n        message\n      } = error;\n      Swal.fire('Erro ao cadastrar produto', message, 'error');\n    });\n  }\n  ConfigurarForm() {\n    this.produtoForm = this.formBuilder.group({\n      nome: new FormControl('', [Validators.required, Validators.maxLength(3)]),\n      codigoBarras: new FormControl('', [Validators.required, Validators.pattern('^[0-9]+$'), Validators.maxLength(3)]),\n      preco: new FormControl('', [Validators.required, Validators.pattern('^[0-9]+$'), Validators.maxLength(1)])\n    });\n  }\n};\nCadastroProdutoComponent = __decorate([Component({\n  selector: 'app-cadastro-produto',\n  templateUrl: './cadastro-produto.component.html',\n  styleUrls: ['./cadastro-produto.component.css']\n})], CadastroProdutoComponent);","map":{"version":3,"names":["Component","FormControl","Validators","Swal","CadastroProdutoComponent","constructor","produtos","formBuilder","ngOnInit","ConfigurarForm","enviar","produto","produtoForm","value","cadastrarProdutos","subscribe","result","fire","icon","title","showConfirmButton","timer","reset","error","message","group","nome","required","maxLength","codigoBarras","pattern","preco","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\cadastro-produto\\cadastro-produto.component.ts"],"sourcesContent":["import { NgClass } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cadastro-produto',\n  templateUrl: './cadastro-produto.component.html',\n  styleUrls: ['./cadastro-produto.component.css']\n})\nexport class CadastroProdutoComponent {\n\n  produtoForm!: FormGroup;\n\n  constructor(private produtos: ProdutosService,\n              private formBuilder: FormBuilder\n  ){}\n\n  ngOnInit() {\n    this.ConfigurarForm();\n  }\n\n\n  enviar(){\n    const produto: IProdutos = this.produtoForm.value as IProdutos;\n\n    this.produtos.cadastrarProdutos(produto).subscribe(\n      (result) => {\n      Swal.fire({\n        icon: 'success',\n        title: 'Produto cadastrado com sucesso!',\n        showConfirmButton: false,\n        timer: 1500\n      });\n      this.produtoForm.reset();\n      },\n      (error) => {\n        const { message } = error;\n        Swal.fire('Erro ao cadastrar produto', message, 'error');\n      });    \n  }\n\n  ConfigurarForm(){\n    this.produtoForm = this.formBuilder.group({\n      nome: new FormControl('', [Validators.required,\n        Validators.maxLength(3),\n        ]),\n      codigoBarras: new FormControl('', [Validators.required,\n        Validators.pattern('^[0-9]+$'),\n        Validators.maxLength(3),\n      ]),\n      preco: new FormControl('', [Validators.required,\n        Validators.pattern('^[0-9]+$'),\n        Validators.maxLength(1),\n      ]),\n    });\n  }\n}\n\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAoBC,WAAW,EAAEC,UAAU,QAAqB,gBAAgB;AAGhF,OAAOC,IAAI,MAAM,aAAa;AAOvB,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAInCC,YAAoBC,QAAyB,EACzBC,WAAwB;IADxB,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,WAAW,GAAXA,WAAW;EAC7B;EAEFC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAGAC,MAAMA,CAAA;IACJ,MAAMC,OAAO,GAAc,IAAI,CAACC,WAAW,CAACC,KAAkB;IAE9D,IAAI,CAACP,QAAQ,CAACQ,iBAAiB,CAACH,OAAO,CAAC,CAACI,SAAS,CAC/CC,MAAM,IAAI;MACXb,IAAI,CAACc,IAAI,CAAC;QACRC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,iCAAiC;QACxCC,iBAAiB,EAAE,KAAK;QACxBC,KAAK,EAAE;OACR,CAAC;MACF,IAAI,CAACT,WAAW,CAACU,KAAK,EAAE;IACxB,CAAC,EACAC,KAAK,IAAI;MACR,MAAM;QAAEC;MAAO,CAAE,GAAGD,KAAK;MACzBpB,IAAI,CAACc,IAAI,CAAC,2BAA2B,EAAEO,OAAO,EAAE,OAAO,CAAC;IAC1D,CAAC,CAAC;EACN;EAEAf,cAAcA,CAAA;IACZ,IAAI,CAACG,WAAW,GAAG,IAAI,CAACL,WAAW,CAACkB,KAAK,CAAC;MACxCC,IAAI,EAAE,IAAIzB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyB,QAAQ,EAC5CzB,UAAU,CAAC0B,SAAS,CAAC,CAAC,CAAC,CACtB,CAAC;MACJC,YAAY,EAAE,IAAI5B,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyB,QAAQ,EACpDzB,UAAU,CAAC4B,OAAO,CAAC,UAAU,CAAC,EAC9B5B,UAAU,CAAC0B,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;MACFG,KAAK,EAAE,IAAI9B,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyB,QAAQ,EAC7CzB,UAAU,CAAC4B,OAAO,CAAC,UAAU,CAAC,EAC9B5B,UAAU,CAAC0B,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;CACD;AA/CYxB,wBAAwB,GAAA4B,UAAA,EALpChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACW/B,wBAAwB,CA+CpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}