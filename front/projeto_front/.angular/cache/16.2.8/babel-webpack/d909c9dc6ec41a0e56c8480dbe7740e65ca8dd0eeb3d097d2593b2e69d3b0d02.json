{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/produtos.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CadastroProdutoComponent {\n  constructor(produtos, formBuilder) {\n    this.produtos = produtos;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.ConfigurarForm();\n  }\n  enviar() {\n    const produto = this.produtoForm.value;\n    this.produtos.cadastrarProdutos(produto).subscribe(() => {\n      this.produtoForm.reset();\n    });\n  }\n  ConfigurarForm() {\n    this.produtoForm = this.formBuilder.group({\n      nome: new FormControl('', [Validators.required, Validators.max(100)]),\n      codigoBarras: new FormControl('', [Validators.required, Validators.pattern('^[0-9]+$'), Validators.maxLength(30)]),\n      preco: new FormControl(0, [Validators.required, Validators.pattern('^[0-9]+$'), Validators.min(1), Validators.max(100000)])\n    });\n  }\n  static #_ = this.ɵfac = function CadastroProdutoComponent_Factory(t) {\n    return new (t || CadastroProdutoComponent)(i0.ɵɵdirectiveInject(i1.ProdutosService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastroProdutoComponent,\n    selectors: [[\"app-cadastro-produto\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"submit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"codigoBarras\", \"formControlName\", \"codigoBarras\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"preco\", \"formControlName\", \"preco\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function CadastroProdutoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Cadastrar Produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function CadastroProdutoComponent_Template_form_submit_2_listener() {\n          return ctx.enviar();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Nome do produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"C\\u00F3digo de Barras\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 4);\n        i0.ɵɵtext(13, \"Pre\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵtext(16, \"Cadastrar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.produtoForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", ctx.produtoForm.invalid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","CadastroProdutoComponent","constructor","produtos","formBuilder","ngOnInit","ConfigurarForm","enviar","produto","produtoForm","value","cadastrarProdutos","subscribe","reset","group","nome","required","max","codigoBarras","pattern","maxLength","preco","min","_","i0","ɵɵdirectiveInject","i1","ProdutosService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","CadastroProdutoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastroProdutoComponent_Template_form_submit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\cadastro-produto\\cadastro-produto.component.ts","C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\cadastro-produto\\cadastro-produto.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ProdutosService } from 'src/app/service/produtos.service';\n\n@Component({\n  selector: 'app-cadastro-produto',\n  templateUrl: './cadastro-produto.component.html',\n  styleUrls: ['./cadastro-produto.component.css']\n})\nexport class CadastroProdutoComponent {\n\n  produtoForm!: FormGroup;\n\n\n  constructor(private produtos: ProdutosService,\n              private formBuilder: FormBuilder\n  ){}\n\n  ngOnInit() {\n    this.ConfigurarForm();\n  }\n\n\n  enviar(){\n    const produto: IProdutos = this.produtoForm.value as IProdutos;\n\n    this.produtos.cadastrarProdutos(produto).subscribe(() => {\n    this.produtoForm.reset());    \n  }\n\n  ConfigurarForm(){\n    this.produtoForm = this.formBuilder.group({\n      nome: new FormControl('', [Validators.required,\n        Validators.max(100),\n        ]),\n      codigoBarras: new FormControl('', [Validators.required,\n        Validators.pattern('^[0-9]+$'),\n        Validators.maxLength(30),\n      ]),\n      preco: new FormControl(0, [Validators.required,\n        Validators.pattern('^[0-9]+$'),\n        Validators.min(1),\n        Validators.max(100000),\n      ]),\n    });\n  }\n  \n\n}\n\n","<h1>Cadastrar Produto</h1>\n\n<form [formGroup]=\"produtoForm\" (submit)=\"enviar()\">\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\" >Nome do produto</label>\n      <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Código de Barras</label>\n      <input type=\"text\" class=\"form-control\" id=\"codigoBarras\" formControlName=\"codigoBarras\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\" >Preço</label>\n        <input type=\"number\" class=\"form-control\" id=\"preco\" formControlName=\"preco\">\n      </div>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"produtoForm.invalid\">Cadastrar</button>\n  </form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}