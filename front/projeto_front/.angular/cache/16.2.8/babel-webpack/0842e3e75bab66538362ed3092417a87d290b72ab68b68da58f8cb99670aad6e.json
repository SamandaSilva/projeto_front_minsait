{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HomeComponent {\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 9,\n    vars: 0,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"myChart\", \"\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Document\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\");\n        i0.ɵɵelement(7, \"canvas\", null, 3);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HomeComponent","_","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport { ChartDataset } from 'chart.js';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent{\n /* produtos: IProdutos[] = [];\n  chart!: Chart; \n\n  @ViewChild('myChart', { static: true }) canvas!: ElementRef;\n\n  constructor(private produtosService: ProdutosService){}\n  \n  ngOnInit() {\n    this.produtosService.listarProdutos().subscribe((produtos) => {\n      this.produtos = produtos;\n\n      // Criar o gráfico\n      const ctx = this.canvas.nativeElement.getContext('2d');\n\n     // type Dataset = ChartDataset<\n   // string, \"nome\"\n   // number[], '0'\n  //  { fill: boolean } // Tipo de dados das propriedades personalizadas do dataset\n  //>;\n\n /* const datasets: Dataset[] = [\n    {\n      label: 'Preço',\n      data: produtos.map((produto) => produto.preco),\n      fill: true,\n      lineTension: 0.1\n    }\n  ];\n  \n  this.chart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: produtos.map((produto) => produto.nome),\n      datasets\n    },\n    options: {\n      title: {import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ProdutosService } from 'src/app/service/produtos.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  produtos: IProdutos[] = [];\n  chart!: Chart;\n\n  @ViewChild('myChart', { static: true }) canvas!: ElementRef;\n\n  constructor(private produtosService: ProdutosService) {}\n\n  ngOnInit() {\n    this.produtosService.listarProdutos().subscribe((produtos) => {\n      this.produtos = produtos;\n\n      // Criar o gráfico\n      const ctx = this.canvas.nativeElement.getContext('2d');\n\n      // Importar o tipo ChartDataset\n      import { ChartDataset } from 'chart.js';\n\n      // Definir o tipo do dataset\n      type Dataset = ChartDataset<\n        string, // Tipo de dados dos rótulos\n        number[], // Tipo de dados dos dados\n        { fill: boolean } // Tipo de dados das propriedades personalizadas do dataset\n      >;\n\n      const datasets: Dataset[] = [\n        {\n          label: 'Preço',\n          data: produtos.map((produto) => produto.preco),\n          fill: true,\n          lineTension: 0.1\n        }\n      ];\n\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: produtos.map((produto) => produto.nome),\n          datasets\n        },\n        options: {\n          title: {\n            text: 'Preço dos produtos'\n          }\n        }\n      });\n    });\n  }\n}\n\n        text: 'Preço dos produtos'\n      }\n    }\n  });\n  \n    });\n  }*/\n}","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <canvas #myChart></canvas>\n</body>\n</html>\n"],"mappings":";AAWA,OAAM,MAAOA,aAAa;EAAA,QAAAC,CAAA,G;qBAAbD,aAAa;EAAA;EAAA,QAAAE,EAAA,G;UAAbF,aAAa;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1BE,EAAA,CAAAC,cAAA,cAAgB;QAEZD,EAAA,CAAAE,SAAA,cAAsB;QAEtBF,EAAA,CAAAC,cAAA,YAAO;QAAAD,EAAA,CAAAG,MAAA,eAAQ;QAAAH,EAAA,CAAAI,YAAA,EAAQ;QAE3BJ,EAAA,CAAAC,cAAA,WAAM;QACFD,EAAA,CAAAE,SAAA,sBAA0B;QAC9BF,EAAA,CAAAI,YAAA,EAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}