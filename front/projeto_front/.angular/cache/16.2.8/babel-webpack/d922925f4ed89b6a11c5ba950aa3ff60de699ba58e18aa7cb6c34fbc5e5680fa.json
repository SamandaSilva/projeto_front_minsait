{"ast":null,"code":"import { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/produtos.service\";\nconst _c0 = [\"myChart\"];\nexport class HomeComponent {\n  constructor(produtosService) {\n    this.produtosService = produtosService;\n    this.produtos = [];\n  }\n  ngOnInit() {\n    this.produtosService.listarProdutos().subscribe(produtos => {\n      this.produtos = produtos;\n      // Criar o gráfico\n      const ctx = this.canvas.nativeElement.getContext('2d');\n      // type Dataset = ChartDataset<\n      // string, \"nome\"\n      // number[], '0'\n      //  { fill: boolean } // Tipo de dados das propriedades personalizadas do dataset\n      //>;\n      const datasets = [{\n        label: 'Preço',\n        data: produtos.map(produto => produto.preco),\n        fill: true,\n        lineTension: 0.1\n      }];\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: produtos.map(produto => produto.nome),\n          datasets\n        },\n        options: {\n          title: {\n            text: 'Preço dos produtos'\n          }\n        }\n      });\n    });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.ProdutosService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    viewQuery: function HomeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 0,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"myChart\", \"\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Document\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\");\n        i0.ɵɵelement(7, \"canvas\", null, 3);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","HomeComponent","constructor","produtosService","produtos","ngOnInit","listarProdutos","subscribe","ctx","canvas","nativeElement","getContext","datasets","label","data","map","produto","preco","fill","lineTension","chart","type","labels","nome","options","title","text","_","i0","ɵɵdirectiveInject","i1","ProdutosService","_2","selectors","viewQuery","HomeComponent_Query","rf","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport { ChartDataset } from 'chart.js';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent{\n  produtos: IProdutos[] = [];\n  chart!: Chart; \n\n  @ViewChild('myChart', { static: true }) canvas!: ElementRef;\n\n  constructor(private produtosService: ProdutosService){}\n  \n  ngOnInit() {\n    this.produtosService.listarProdutos().subscribe((produtos) => {\n      this.produtos = produtos;\n\n      // Criar o gráfico\n      const ctx = this.canvas.nativeElement.getContext('2d');\n\n     // type Dataset = ChartDataset<\n   // string, \"nome\"\n   // number[], '0'\n  //  { fill: boolean } // Tipo de dados das propriedades personalizadas do dataset\n  //>;\n\n  const datasets: Dataset[] = [\n    {\n      label: 'Preço',\n      data: produtos.map((produto) => produto.preco),\n      fill: true,\n      lineTension: 0.1\n    }\n  ];\n  \n  this.chart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: produtos.map((produto) => produto.nome),\n      datasets\n    },\n    options: {\n      title: {\n        text: 'Preço dos produtos'\n      }\n    }\n  });\n  \n    });\n  }\n}","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <canvas #myChart></canvas>\n</body>\n</html>\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,UAAU;;;;AAUhC,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IALnC,KAAAC,QAAQ,GAAgB,EAAE;EAK4B;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACF,eAAe,CAACG,cAAc,EAAE,CAACC,SAAS,CAAEH,QAAQ,IAAI;MAC3D,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAExB;MACA,MAAMI,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;MAEvD;MACF;MACA;MACD;MACA;MAEA,MAAMC,QAAQ,GAAc,CAC1B;QACEC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAEV,QAAQ,CAACW,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,KAAK,CAAC;QAC9CC,IAAI,EAAE,IAAI;QACVC,WAAW,EAAE;OACd,CACF;MAED,IAAI,CAACC,KAAK,GAAG,IAAIpB,KAAK,CAACQ,GAAG,EAAE;QAC1Ba,IAAI,EAAE,KAAK;QACXP,IAAI,EAAE;UACJQ,MAAM,EAAElB,QAAQ,CAACW,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACO,IAAI,CAAC;UAC/CX;SACD;QACDY,OAAO,EAAE;UACPC,KAAK,EAAE;YACLC,IAAI,EAAE;;;OAGX,CAAC;IAEA,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBA5CU1B,aAAa,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb/B,aAAa;IAAAgC,SAAA;IAAAC,SAAA,WAAAC,oBAAAC,EAAA,EAAA5B,GAAA;MAAA,IAAA4B,EAAA;;;;;;;;;;;;;QCV1BR,EAAA,CAAAS,cAAA,cAAgB;QAEZT,EAAA,CAAAU,SAAA,cAAsB;QAEtBV,EAAA,CAAAS,cAAA,YAAO;QAAAT,EAAA,CAAAW,MAAA,eAAQ;QAAAX,EAAA,CAAAY,YAAA,EAAQ;QAE3BZ,EAAA,CAAAS,cAAA,WAAM;QACFT,EAAA,CAAAU,SAAA,sBAA0B;QAC9BV,EAAA,CAAAY,YAAA,EAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}