{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport let HomeComponent = class HomeComponent {\n  constructor(produtosService) {\n    this.produtosService = produtosService;\n    this.produtos = [];\n  }\n  ngOnInit() {\n    this.produtosService.listarProdutos().subscribe(produtos => {\n      this.produtos = produtos;\n      // Criar o gráfico\n      const ctx = this.canvas.nativeElement.getContext('2d');\n      if (ctx) {\n        this.chart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: produtos.map(produto => produto.nome),\n            datasets: [{\n              label: 'Preço',\n              data: produtos.map(produto => produto.preco),\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              },\n              title: {\n                display: true,\n                text: 'Preço dos produtos',\n                font: {\n                  weight: 'bold'\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n};\n__decorate([ViewChild('myChart', {\n  static: true\n})], HomeComponent.prototype, \"canvas\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":{"version":3,"names":["Component","ViewChild","Chart","registerables","register","HomeComponent","constructor","produtosService","produtos","ngOnInit","listarProdutos","subscribe","ctx","canvas","nativeElement","getContext","chart","type","data","labels","map","produto","nome","datasets","label","preco","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","plugins","legend","display","title","text","font","weight","__decorate","static","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  produtos: IProdutos[] = [];\n  chart: Chart | undefined;\n\n  @ViewChild('myChart', { static: true }) canvas!: ElementRef;\n\n  constructor(private produtosService: ProdutosService) {}\n\n  ngOnInit() {\n    this.produtosService.listarProdutos().subscribe((produtos) => {\n      this.produtos = produtos;\n\n      // Criar o gráfico\n      const ctx = this.canvas.nativeElement.getContext('2d');\n\n      if (ctx) {\n        this.chart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: produtos.map((produto) => produto.nome),\n            datasets: [{\n              label: 'Preço',\n              data: produtos.map((produto) => produto.preco),\n              backgroundColor: 'rgba(255, 99, 132, 0.2)', // Vermelho forte com transparência\n              borderColor: 'rgba(255, 99, 132, 1)', // Vermelho forte sem transparência\n              borderWidth: 1\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              },\n              title: {\n                display: true,\n                text: 'Preço dos produtos',\n                font: {\n                  weight: 'bold'\n                }\n              }              \n            }\n          }\n        });\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAcC,SAAS,QAAgB,eAAe;AAGxE,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAC/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAOzB,WAAME,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IALnC,KAAAC,QAAQ,GAAgB,EAAE;EAK6B;EAEvDC,QAAQA,CAAA;IACN,IAAI,CAACF,eAAe,CAACG,cAAc,EAAE,CAACC,SAAS,CAAEH,QAAQ,IAAI;MAC3D,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAExB;MACA,MAAMI,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;MAEtD,IAAIH,GAAG,EAAE;QACP,IAAI,CAACI,KAAK,GAAG,IAAId,KAAK,CAACU,GAAG,EAAE;UAC1BK,IAAI,EAAE,KAAK;UACXC,IAAI,EAAE;YACJC,MAAM,EAAEX,QAAQ,CAACY,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC;YAC/CC,QAAQ,EAAE,CAAC;cACTC,KAAK,EAAE,OAAO;cACdN,IAAI,EAAEV,QAAQ,CAACY,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACI,KAAK,CAAC;cAC9CC,eAAe,EAAE,yBAAyB;cAC1CC,WAAW,EAAE,uBAAuB;cACpCC,WAAW,EAAE;aACd;WACF;UACDC,OAAO,EAAE;YACPC,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDC,WAAW,EAAE;;aAEhB;YACDC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNC,OAAO,EAAE;eACV;cACDC,KAAK,EAAE;gBACLD,OAAO,EAAE,IAAI;gBACbE,IAAI,EAAE,oBAAoB;gBAC1BC,IAAI,EAAE;kBACJC,MAAM,EAAE;;;;;SAKjB,CAAC;;IAEN,CAAC,CAAC;EACJ;CACD;AA/CyCC,UAAA,EAAvCvC,SAAS,CAAC,SAAS,EAAE;EAAEwC,MAAM,EAAE;AAAI,CAAE,CAAC,C,4CAAqB;AAJjDpC,aAAa,GAAAmC,UAAA,EALzBxC,SAAS,CAAC;EACT0C,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWvC,aAAa,CAmDzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}