{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nexport let EdicaoProdutoComponent = class EdicaoProdutoComponent {\n  constructor(produtoService, route, formBuild) {\n    this.produtoService = produtoService;\n    this.route = route;\n    this.formBuild = formBuild;\n    this.produtoForm = new FormGroup({\n      nome: new FormControl('', [Validators.required, Validators.max(100)]),\n      codigoBarras: new FormControl('', [Validators.required, Validators.pattern('^[0-9]+$'), Validators.max(30)]),\n      preco: new FormControl(0, [Validators.required, Validators.pattern('^[0-9]+$'), Validators.min(1), Validators.max(10)])\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = +params['id'];\n      if (!isNaN(id)) {\n        this.produtoId = id;\n        this.produtoService.buscarProdutoId(this.produtoId).subscribe(produto => {\n          this.produto = produto;\n          this.produtoForm.patchValue(produto);\n        }, error => {\n          console.error('Erro ao buscar o produto:', error);\n        });\n      }\n    });\n  }\n  atualizarProdutos() {\n    const produto = this.produtoForm.value;\n    if (this.produto) {\n      produto.id = this.produto.id;\n      this.produtoService.atualizarProdutos(produto.id, produto).subscribe(() => {\n        this.produtoForm.reset();\n      });\n    }\n  }\n};\nEdicaoProdutoComponent = __decorate([Component({\n  selector: 'app-edicao-produto',\n  templateUrl: './edicao-produto.component.html',\n  styleUrls: ['./edicao-produto.component.css']\n})], EdicaoProdutoComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","EdicaoProdutoComponent","constructor","produtoService","route","formBuild","produtoForm","nome","required","max","codigoBarras","pattern","preco","min","ngOnInit","params","subscribe","id","isNaN","produtoId","buscarProdutoId","produto","patchValue","error","console","atualizarProdutos","value","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\edicao-produto\\edicao-produto.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-edicao-produto',\n  templateUrl: './edicao-produto.component.html',\n  styleUrls: ['./edicao-produto.component.css']\n})\nexport class EdicaoProdutoComponent implements OnInit{\n\n  produto!: IProdutos;\n  produtoId!: number;\n  produtoForm!: FormGroup;\n\n  constructor(\n    private produtoService: ProdutosService,\n    private route: ActivatedRoute,\n    private formBuild: F\n    ){ }\n\n  produtoForm = new FormGroup({\n    nome: new FormControl('', [Validators.required,\n    Validators.max(100)\n    ]),\n\n    codigoBarras: new FormControl('', [Validators.required,\n      Validators.pattern('^[0-9]+$'),\n      Validators.max(30)\n    ]),\n\n    preco: new FormControl(0,[Validators.required,\n      Validators.pattern('^[0-9]+$'),\n      Validators.min(1),\n      Validators.max(10)]),\n  });\n\n\n  ngOnInit() {\n      this.route.params.subscribe((params) => {\n        const id = +params['id'];\n        if (!isNaN(id)) {\n          this.produtoId = id; \n          this.produtoService.buscarProdutoId(this.produtoId).subscribe(\n            (produto) => {\n              this.produto = produto; \n              this.produtoForm.patchValue(produto);\n            },\n            (error) => {\n              console.error('Erro ao buscar o produto:', error);\n            }\n          );\n        }\n      });\n    }\n    \n  \n  atualizarProdutos() {\n    const produto: IProdutos = this.produtoForm.value as IProdutos;\n  \n    if (this.produto) {\n      produto.id = this.produto.id;\n      this.produtoService.atualizarProdutos(produto.id, produto).subscribe(() => {\n        this.produtoForm.reset();\n      });\n    }\n  }\n  \n  \n    \n  }\n  \n  \n  \n  \n\n\n\n\n\n  \n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAY5D,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAMjCC,YACUC,cAA+B,EAC/BC,KAAqB,EACrBC,SAAY;IAFZ,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;IAGnB,KAAAC,WAAW,GAAG,IAAIR,SAAS,CAAC;MAC1BS,IAAI,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACQ,QAAQ,EAC9CR,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,CAClB,CAAC;MAEFC,YAAY,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACQ,QAAQ,EACpDR,UAAU,CAACW,OAAO,CAAC,UAAU,CAAC,EAC9BX,UAAU,CAACS,GAAG,CAAC,EAAE,CAAC,CACnB,CAAC;MAEFG,KAAK,EAAE,IAAIb,WAAW,CAAC,CAAC,EAAC,CAACC,UAAU,CAACQ,QAAQ,EAC3CR,UAAU,CAACW,OAAO,CAAC,UAAU,CAAC,EAC9BX,UAAU,CAACa,GAAG,CAAC,CAAC,CAAC,EACjBb,UAAU,CAACS,GAAG,CAAC,EAAE,CAAC,CAAC;KACtB,CAAC;EAhBG;EAmBLK,QAAQA,CAAA;IACJ,IAAI,CAACV,KAAK,CAACW,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,MAAME,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;MACxB,IAAI,CAACG,KAAK,CAACD,EAAE,CAAC,EAAE;QACd,IAAI,CAACE,SAAS,GAAGF,EAAE;QACnB,IAAI,CAACd,cAAc,CAACiB,eAAe,CAAC,IAAI,CAACD,SAAS,CAAC,CAACH,SAAS,CAC1DK,OAAO,IAAI;UACV,IAAI,CAACA,OAAO,GAAGA,OAAO;UACtB,IAAI,CAACf,WAAW,CAACgB,UAAU,CAACD,OAAO,CAAC;QACtC,CAAC,EACAE,KAAK,IAAI;UACRC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD,CAAC,CACF;;IAEL,CAAC,CAAC;EACJ;EAGFE,iBAAiBA,CAAA;IACf,MAAMJ,OAAO,GAAc,IAAI,CAACf,WAAW,CAACoB,KAAkB;IAE9D,IAAI,IAAI,CAACL,OAAO,EAAE;MAChBA,OAAO,CAACJ,EAAE,GAAG,IAAI,CAACI,OAAO,CAACJ,EAAE;MAC5B,IAAI,CAACd,cAAc,CAACsB,iBAAiB,CAACJ,OAAO,CAACJ,EAAE,EAAEI,OAAO,CAAC,CAACL,SAAS,CAAC,MAAK;QACxE,IAAI,CAACV,WAAW,CAACqB,KAAK,EAAE;MAC1B,CAAC,CAAC;;EAEN;CAIC;AA7DU1B,sBAAsB,GAAA2B,UAAA,EALlC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW9B,sBAAsB,CA6DhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}