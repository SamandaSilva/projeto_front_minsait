{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nexport let EdicaoProdutoComponent = class EdicaoProdutoComponent {};\nEdicaoProdutoComponent = __decorate([Component({\n  selector: 'app-edicao-produto',\n  templateUrl: './edicao-produto.component.html',\n  styleUrls: ['./edicao-produto.component.css']\n})], EdicaoProdutoComponent);\n{}\nprodutoForm = new FormGroup({\n  nome: new FormControl('', [Validators.required, Validators.max(100)]),\n  codigoBarras: new FormControl('', [Validators.required, Validators.pattern('^[0-9]+$'), Validators.max(30)]),\n  preco: new FormControl(0, [Validators.required, Validators.pattern('^[0-9]+$'), Validators.min(1), Validators.max(10)])\n});\nngOnInit();\n{\n  this.route.params.subscribe(params => {\n    const id = +params['id'];\n    if (!isNaN(id)) {\n      this.produtoId = id;\n      this.produtoService.buscarProdutoId(this.produtoId).subscribe(produto => {\n        this.produto = produto;\n        this.produtoForm.patchValue(produto);\n      }, error => {\n        console.error('Erro ao buscar o produto:', error);\n      });\n    }\n  });\n}\natualizarProdutos();\n{\n  const produto = this.produtoForm.value;\n  if (this.produto) {\n    produto.id = this.produto.id;\n    this.produtoService.atualizarProdutos(produto.id, produto).subscribe(() => {\n      this.produtoForm.reset();\n    });\n  }\n}","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","EdicaoProdutoComponent","__decorate","selector","templateUrl","styleUrls","produtoForm","nome","required","max","codigoBarras","pattern","preco","min","ngOnInit","route","params","subscribe","id","isNaN","produtoId","produtoService","buscarProdutoId","produto","patchValue","error","console","atualizarProdutos","value","reset"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\edicao-produto\\edicao-produto.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-edicao-produto',\n  templateUrl: './edicao-produto.component.html',\n  styleUrls: ['./edicao-produto.component.css']\n})\nexport class EdicaoProdutoComponent implements OnInit{\n\n  produto!: IProdutos;\n  produtoId!: number;\n  produtoForm!: FormGroup;\n\n  constructor(\n    private produtoService: ProdutosService,\n    private route: ActivatedRoute,\n    private for\n    ){ }\n\n  produtoForm = new FormGroup({\n    nome: new FormControl('', [Validators.required,\n    Validators.max(100)\n    ]),\n\n    codigoBarras: new FormControl('', [Validators.required,\n      Validators.pattern('^[0-9]+$'),\n      Validators.max(30)\n    ]),\n\n    preco: new FormControl(0,[Validators.required,\n      Validators.pattern('^[0-9]+$'),\n      Validators.min(1),\n      Validators.max(10)]),\n  });\n\n\n  ngOnInit() {\n      this.route.params.subscribe((params) => {\n        const id = +params['id'];\n        if (!isNaN(id)) {\n          this.produtoId = id; \n          this.produtoService.buscarProdutoId(this.produtoId).subscribe(\n            (produto) => {\n              this.produto = produto; \n              this.produtoForm.patchValue(produto);\n            },\n            (error) => {\n              console.error('Erro ao buscar o produto:', error);\n            }\n          );\n        }\n      });\n    }\n    \n  \n  atualizarProdutos() {\n    const produto: IProdutos = this.produtoForm.value as IProdutos;\n  \n    if (this.produto) {\n      produto.id = this.produto.id;\n      this.produtoService.atualizarProdutos(produto.id, produto).subscribe(() => {\n        this.produtoForm.reset();\n      });\n    }\n  }\n  \n  \n    \n  }\n  \n  \n  \n  \n\n\n\n\n\n  \n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAY5D,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB,GAU9B;AAVQA,sBAAsB,GAAAC,UAAA,EALlCL,SAAS,CAAC;EACTM,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWJ,sBAAsB,CAU9B;AAAA;AAEHK,WAAW,GAAG,IAAIR,SAAS,CAAC;EAC1BS,IAAI,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACQ,QAAQ,EAC9CR,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,CAClB,CAAC;EAEFC,YAAY,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACQ,QAAQ,EACpDR,UAAU,CAACW,OAAO,CAAC,UAAU,CAAC,EAC9BX,UAAU,CAACS,GAAG,CAAC,EAAE,CAAC,CACnB,CAAC;EAEFG,KAAK,EAAE,IAAIb,WAAW,CAAC,CAAC,EAAC,CAACC,UAAU,CAACQ,QAAQ,EAC3CR,UAAU,CAACW,OAAO,CAAC,UAAU,CAAC,EAC9BX,UAAU,CAACa,GAAG,CAAC,CAAC,CAAC,EACjBb,UAAU,CAACS,GAAG,CAAC,EAAE,CAAC,CAAC;CACtB,CAAC;AAGFK,QAAQ,EAAE;AAAC;EACP,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;IACrC,MAAME,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;IACxB,IAAI,CAACG,KAAK,CAACD,EAAE,CAAC,EAAE;MACd,IAAI,CAACE,SAAS,GAAGF,EAAE;MACnB,IAAI,CAACG,cAAc,CAACC,eAAe,CAAC,IAAI,CAACF,SAAS,CAAC,CAACH,SAAS,CAC1DM,OAAO,IAAI;QACV,IAAI,CAACA,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACjB,WAAW,CAACkB,UAAU,CAACD,OAAO,CAAC;MACtC,CAAC,EACAE,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CACF;;EAEL,CAAC,CAAC;;AAINE,iBAAiB,EAAE;AAAC;EAClB,MAAMJ,OAAO,GAAc,IAAI,CAACjB,WAAW,CAACsB,KAAkB;EAE9D,IAAI,IAAI,CAACL,OAAO,EAAE;IAChBA,OAAO,CAACL,EAAE,GAAG,IAAI,CAACK,OAAO,CAACL,EAAE;IAC5B,IAAI,CAACG,cAAc,CAACM,iBAAiB,CAACJ,OAAO,CAACL,EAAE,EAAEK,OAAO,CAAC,CAACN,SAAS,CAAC,MAAK;MACxE,IAAI,CAACX,WAAW,CAACuB,KAAK,EAAE;IAC1B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}