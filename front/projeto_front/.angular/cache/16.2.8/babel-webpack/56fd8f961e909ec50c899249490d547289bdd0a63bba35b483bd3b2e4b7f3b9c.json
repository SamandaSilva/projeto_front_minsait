{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/produtos.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class EdicaoProdutoComponent {\n  constructor(produtoService, route, formBuild) {\n    this.produtoService = produtoService;\n    this.route = route;\n    this.formBuild = formBuild;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = +params['id'];\n      if (!isNaN(id)) {\n        this.produtoId = id;\n        this.produtoService.buscarProdutoId(this.produtoId).subscribe(produto => {\n          this.produto = produto;\n          this.produtoForm.patchValue(produto);\n        }, error => {\n          console.error('Erro ao buscar o produto:', error);\n        });\n      }\n    });\n  }\n  atualizarProdutos() {\n    const produto = this.produtoForm.value;\n    if (this.produto) {\n      produto.id = this.produto.id;\n      this.produtoService.atualizarProdutos(produto.id, produto).subscribe(() => {\n        this.produtoForm.reset();\n      });\n    }\n  }\n  ConfigurarForm() {\n    this.produtoForm = this.formBuild;\n  }\n  static #_ = this.ɵfac = function EdicaoProdutoComponent_Factory(t) {\n    return new (t || EdicaoProdutoComponent)(i0.ɵɵdirectiveInject(i1.ProdutosService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EdicaoProdutoComponent,\n    selectors: [[\"app-edicao-produto\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"submit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"codigoBarras\", \"formControlName\", \"codigoBarras\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"preco\", \"formControlName\", \"preco\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function EdicaoProdutoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Editar Produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function EdicaoProdutoComponent_Template_form_submit_2_listener() {\n          return ctx.atualizarProdutos();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Nome do produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"C\\u00F3digo de Barras\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 4);\n        i0.ɵɵtext(13, \"Pre\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵtext(16, \"Salvar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.produtoForm);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EdicaoProdutoComponent","constructor","produtoService","route","formBuild","ngOnInit","params","subscribe","id","isNaN","produtoId","buscarProdutoId","produto","produtoForm","patchValue","error","console","atualizarProdutos","value","reset","ConfigurarForm","_","i0","ɵɵdirectiveInject","i1","ProdutosService","i2","ActivatedRoute","i3","FormBuilder","_2","selectors","decls","vars","consts","template","EdicaoProdutoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EdicaoProdutoComponent_Template_form_submit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\edicao-produto\\edicao-produto.component.ts","C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\edicao-produto\\edicao-produto.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-edicao-produto',\n  templateUrl: './edicao-produto.component.html',\n  styleUrls: ['./edicao-produto.component.css']\n})\nexport class EdicaoProdutoComponent implements OnInit{\n\n  produto!: IProdutos;\n  produtoId!: number;\n  produtoForm!: FormGroup;\n\n  constructor(\n    private produtoService: ProdutosService,\n    private route: ActivatedRoute,\n    private formBuild: FormBuilder\n    ){ }\n\n  ngOnInit() {\n      this.route.params.subscribe((params) => {\n        const id = +params['id'];\n        if (!isNaN(id)) {\n          this.produtoId = id; \n          this.produtoService.buscarProdutoId(this.produtoId).subscribe(\n            (produto) => {\n              this.produto = produto; \n              this.produtoForm.patchValue(produto);\n            },\n            (error) => {\n              console.error('Erro ao buscar o produto:', error);\n            }\n          );\n        }\n      });\n    }\n    \n  \n  atualizarProdutos() {\n    const produto: IProdutos = this.produtoForm.value as IProdutos;\n  \n    if (this.produto) {\n      produto.id = this.produto.id;\n      this.produtoService.atualizarProdutos(produto.id, produto).subscribe(() => {\n        this.produtoForm.reset();\n      });\n    }\n  }\n  \n  ConfigurarForm(){\n    this.produtoForm = this.formBuild\n  }\n  \n    \n  }\n  \n  \n  \n  \n\n\n\n\n\n  \n\n\n","<h1>Editar Produto</h1>\n\n<form [formGroup]=\"produtoForm\" (submit)=\"atualizarProdutos()\">\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\" >Nome do produto</label>\n      <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Código de Barras</label>\n      <input type=\"text\" class=\"form-control\" id=\"codigoBarras\" formControlName=\"codigoBarras\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\" >Preço</label>\n        <input type=\"number\" class=\"form-control\" id=\"preco\" formControlName=\"preco\">\n      </div>\n    <button class=\"btn btn-primary\" type=\"submit\" >Salvar</button>\n  </form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}