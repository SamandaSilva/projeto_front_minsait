{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HomeComponent {\n  constructor() {\n    this.chartType = 'line';\n    this.chartDatasets = [{\n      data: [65, 59, 80, 81, 56, 55, 40],\n      label: 'My First dataset'\n    }, {\n      data: [28, 48, 40, 19, 86, 27, 90],\n      label: 'My Second dataset'\n    }];\n    this.chartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    this.chartColors = [{\n      backgroundColor: 'rgba(105, 0, 132, .2)',\n      borderColor: 'rgba(200, 99, 132, .7)',\n      borderWidth: 2\n    }, {\n      backgroundColor: 'rgba(0, 137, 132, .2)',\n      borderColor: 'rgba(0, 10, 130, .7)',\n      borderWidth: 2\n    }];\n    this.chartOptions = {\n      responsive: true\n    };\n  }\n  chartClicked(event) {\n    console.log(event);\n  }\n  chartHovered(event) {\n    console.log(event);\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 2,\n    vars: 6,\n    consts: [[2, \"display\", \"block\"], [\"mdbChart\", \"\", 3, \"chartType\", \"datasets\", \"labels\", \"colors\", \"options\", \"legend\", \"chartHover\", \"chartClick\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"canvas\", 1);\n        i0.ɵɵlistener(\"chartHover\", function HomeComponent_Template_canvas_chartHover_1_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function HomeComponent_Template_canvas_chartClick_1_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"chartType\", ctx.chartType)(\"datasets\", ctx.chartDatasets)(\"labels\", ctx.chartLabels)(\"colors\", ctx.chartColors)(\"options\", ctx.chartOptions)(\"legend\", true);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HomeComponent","constructor","chartType","chartDatasets","data","label","chartLabels","chartColors","backgroundColor","borderColor","borderWidth","chartOptions","responsive","chartClicked","event","console","log","chartHovered","_","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","HomeComponent_Template_canvas_chartHover_1_listener","$event","HomeComponent_Template_canvas_chartClick_1_listener","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\RanyAmanda\\eclipse-workspace\\Projeto-minsait\\front\\projeto_front\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { Observable } from 'rxjs';\nimport { IProdutos } from 'src/app/interfaces/produtos';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  chartType = 'line';\n\n  chartDatasets = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'My First dataset' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'My Second dataset' }\n  ];\n\n  chartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\n  chartColors = [\n    {\n      backgroundColor: 'rgba(105, 0, 132, .2)',\n      borderColor: 'rgba(200, 99, 132, .7)',\n      borderWidth: 2,\n    },\n    {\n      backgroundColor: 'rgba(0, 137, 132, .2)',\n      borderColor: 'rgba(0, 10, 130, .7)',\n      borderWidth: 2,\n    }\n  ];\n\n  chartOptions: any = {\n    responsive: true\n  };\n\n  chartClicked(event: any) {\n    console.log(event);\n  }\n\n  chartHovered(event: any) {\n    console.log(event);\n  }\n}\n\n}\n\n\n","<div style=\"display: block\">\n    <canvas mdbChart\n      [chartType]=\"chartType\"\n      [datasets]=\"chartDatasets\"\n      [labels]=\"chartLabels\"\n      [colors]=\"chartColors\"\n      [options]=\"chartOptions\"\n      [legend]=\"true\"\n      (chartHover)=\"chartHovered($event)\"\n      (chartClick)=\"chartClicked($event)\">\n    </canvas>\n  </div>"],"mappings":";AAWA,OAAM,MAAOA,aAAa;EAL1BC,YAAA;IAME,KAAAC,SAAS,GAAG,MAAM;IAElB,KAAAC,aAAa,GAAG,CACd;MAAEC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAkB,CAAE,EACjE;MAAED,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAmB,CAAE,CACnE;IAED,KAAAC,WAAW,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;IAE9E,KAAAC,WAAW,GAAG,CACZ;MACEC,eAAe,EAAE,uBAAuB;MACxCC,WAAW,EAAE,wBAAwB;MACrCC,WAAW,EAAE;KACd,EACD;MACEF,eAAe,EAAE,uBAAuB;MACxCC,WAAW,EAAE,sBAAsB;MACnCC,WAAW,EAAE;KACd,CACF;IAED,KAAAC,YAAY,GAAQ;MAClBC,UAAU,EAAE;KACb;;EAEDC,YAAYA,CAACC,KAAU;IACrBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;EAEAG,YAAYA,CAACH,KAAU;IACrBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;EAAC,QAAAI,CAAA,G;qBAjCUlB,aAAa;EAAA;EAAA,QAAAmB,EAAA,G;UAAbnB,aAAa;IAAAoB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX1BE,EAAA,CAAAC,cAAA,aAA4B;QAQtBD,EAAA,CAAAE,UAAA,wBAAAC,oDAAAC,MAAA;UAAA,OAAcL,GAAA,CAAAV,YAAA,CAAAe,MAAA,CAAoB;QAAA,EAAC,wBAAAC,oDAAAD,MAAA;UAAA,OACrBL,GAAA,CAAAd,YAAA,CAAAmB,MAAA,CAAoB;QAAA,EADC;QAErCJ,EAAA,CAAAM,YAAA,EAAS;;;QARPN,EAAA,CAAAO,SAAA,GAAuB;QAAvBP,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAzB,SAAA,CAAuB,aAAAyB,GAAA,CAAAxB,aAAA,YAAAwB,GAAA,CAAArB,WAAA,YAAAqB,GAAA,CAAApB,WAAA,aAAAoB,GAAA,CAAAhB,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}